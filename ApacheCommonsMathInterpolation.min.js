var ApacheCommonsMathInterpolation;(function(ApacheCommonsMathInterpolation){var EPSILON=2.220446049250313e-16;var Constant=function(){function Constant(c){this.c=c}Constant.prototype.value=function(x){return this.c};return Constant}();ApacheCommonsMathInterpolation.Constant=Constant;var AkimaSplineInterpolator=function(){function AkimaSplineInterpolator(){}AkimaSplineInterpolator.prototype.interpolate=function(xvals,yvals){if(!xvals||!yvals){throw new Error("Null argument.")}if(xvals.length!=yvals.length){throw new Error("Dimension mismatch for xvals and yvals.")}if(xvals.length<AkimaSplineInterpolator.MINIMUM_NUMBER_POINTS){throw new Error("Number of points is too small.")}MathArrays.checkOrder(xvals);var numberOfDiffAndWeightElements=xvals.length-1;var differences=Array(numberOfDiffAndWeightElements);var weights=Array(numberOfDiffAndWeightElements);for(var i=0;i<differences.length;i++){differences[i]=(yvals[i+1]-yvals[i])/(xvals[i+1]-xvals[i])}for(var i=1;i<weights.length;i++){weights[i]=Math.abs(differences[i]-differences[i-1])}var firstDerivatives=Array(xvals.length);for(var i=2;i<firstDerivatives.length-2;i++){var wP=weights[i+1];var wM=weights[i-1];if(Math.abs(wP)<EPSILON&&Math.abs(wM)<EPSILON){var xv=xvals[i];var xvP=xvals[i+1];var xvM=xvals[i-1];firstDerivatives[i]=((xvP-xv)*differences[i-1]+(xv-xvM)*differences[i])/(xvP-xvM)}else{firstDerivatives[i]=(wP*differences[i-1]+wM*differences[i])/(wP+wM)}}firstDerivatives[0]=this.differentiateThreePoint(xvals,yvals,0,0,1,2);firstDerivatives[1]=this.differentiateThreePoint(xvals,yvals,1,0,1,2);firstDerivatives[xvals.length-2]=this.differentiateThreePoint(xvals,yvals,xvals.length-2,xvals.length-3,xvals.length-2,xvals.length-1);firstDerivatives[xvals.length-1]=this.differentiateThreePoint(xvals,yvals,xvals.length-1,xvals.length-3,xvals.length-2,xvals.length-1);return this.interpolateHermiteSorted(xvals,yvals,firstDerivatives)};AkimaSplineInterpolator.prototype.differentiateThreePoint=function(xvals,yvals,indexOfDifferentiation,indexOfFirstSample,indexOfSecondsample,indexOfThirdSample){var x0=yvals[indexOfFirstSample];var x1=yvals[indexOfSecondsample];var x2=yvals[indexOfThirdSample];var t=xvals[indexOfDifferentiation]-xvals[indexOfFirstSample];var t1=xvals[indexOfSecondsample]-xvals[indexOfFirstSample];var t2=xvals[indexOfThirdSample]-xvals[indexOfFirstSample];var a=(x2-x0-t2/t1*(x1-x0))/(t2*t2-t1*t2);var b=(x1-x0-a*t1*t1)/t1;return 2*a*t+b};AkimaSplineInterpolator.prototype.interpolateHermiteSorted=function(xvals,yvals,firstDerivatives){if(xvals.length!=yvals.length){throw new Error("Dimension mismatch")}if(xvals.length!=firstDerivatives.length){throw new Error("Dimension mismatch")}var minimumLength=2;if(xvals.length<minimumLength){throw new Error("Not enough points.")}var size=xvals.length-1;var polynomials=Array(size);var coefficients=Array(4);for(var i=0;i<polynomials.length;i++){var w=xvals[i+1]-xvals[i];var w2=w*w;var yv=yvals[i];var yvP=yvals[i+1];var fd=firstDerivatives[i];var fdP=firstDerivatives[i+1];coefficients[0]=yv;coefficients[1]=firstDerivatives[i];coefficients[2]=(3*(yvP-yv)/w-2*fd-fdP)/w;coefficients[3]=(2*(yv-yvP)/w+fd+fdP)/w2;polynomials[i]=new PolynomialFunction(coefficients)}return new PolynomialSplineFunction(xvals,polynomials)};return AkimaSplineInterpolator}();AkimaSplineInterpolator.MINIMUM_NUMBER_POINTS=5;ApacheCommonsMathInterpolation.AkimaSplineInterpolator=AkimaSplineInterpolator;var SplineInterpolator=function(){function SplineInterpolator(){}SplineInterpolator.prototype.interpolate=function(x,y){if(x.length!=y.length){throw new Error("Dimension msmatch.")}if(x.length<3){throw new Error("Number of points is too small.")}var n=x.length-1;MathArrays.checkOrder(x);var h=Array(n);for(var i=0;i<n;i++){h[i]=x[i+1]-x[i]}var mu=Array(n);var z=Array(n+1);mu[0]=0;z[0]=0;var g=0;for(var i=1;i<n;i++){g=2*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];mu[i]=h[i]/g;z[i]=(3*(y[i+1]*h[i-1]-y[i]*(x[i+1]-x[i-1])+y[i-1]*h[i])/(h[i-1]*h[i])-h[i-1]*z[i-1])/g}var b=Array(n);var c=Array(n+1);var d=Array(n);z[n]=0;c[n]=0;for(var j=n-1;j>=0;j--){c[j]=z[j]-mu[j]*c[j+1];b[j]=(y[j+1]-y[j])/h[j]-h[j]*(c[j+1]+2*c[j])/3;d[j]=(c[j+1]-c[j])/(3*h[j])}var polynomials=Array(n);var coefficients=Array(4);for(var i=0;i<n;i++){coefficients[0]=y[i];coefficients[1]=b[i];coefficients[2]=c[i];coefficients[3]=d[i];polynomials[i]=new PolynomialFunction(coefficients)}return new PolynomialSplineFunction(x,polynomials)};return SplineInterpolator}();ApacheCommonsMathInterpolation.SplineInterpolator=SplineInterpolator;var LinearInterpolator=function(){function LinearInterpolator(){}LinearInterpolator.prototype.interpolate=function(x,y){if(x.length!=y.length){throw new Error("Dimension msmatch.")}if(x.length<2){throw new Error("Number of points is too small.")}var n=x.length-1;MathArrays.checkOrder(x);var m=Array(n);for(var i=0;i<n;i++){m[i]=(y[i+1]-y[i])/(x[i+1]-x[i])}var polynomials=Array(n);var coefficients=Array(2);for(var i=0;i<n;i++){coefficients[0]=y[i];coefficients[1]=m[i];polynomials[i]=new PolynomialFunction(coefficients)}return new PolynomialSplineFunction(x,polynomials)};return LinearInterpolator}();ApacheCommonsMathInterpolation.LinearInterpolator=LinearInterpolator;var PolynomialSplineFunction=function(){function PolynomialSplineFunction(knots,polynomials){if(!knots||!polynomials){throw new Error("Null argument.")}if(knots.length<2){throw new Error("Illegal argument knots.")}if(knots.length-1!=polynomials.length){throw new Error("Dimension mismatch.")}MathArrays.checkOrder(knots);this.n=knots.length-1;this.knots=knots.slice();this.polynomials=polynomials.slice()}PolynomialSplineFunction.prototype.value=function(v){var i=Arrays.binarySearch(this.knots,v);if(i<0){i=-i-2}i=Math.max(0,Math.min(i,this.polynomials.length-1));return this.polynomials[i].value(v-this.knots[i])};return PolynomialSplineFunction}();ApacheCommonsMathInterpolation.PolynomialSplineFunction=PolynomialSplineFunction;var PolynomialFunction=function(){function PolynomialFunction(c){var n=c.length;if(n==0){throw new Error("Empty polynomials coefficients array")}while(n>1&&c[n-1]==0){--n}this.coefficients=c.slice()}PolynomialFunction.prototype.value=function(x){return PolynomialFunction.evaluate(this.coefficients,x)};PolynomialFunction.evaluate=function(coefficients,argument){var n=coefficients.length;if(n==0){throw new Error("Empty polynomials coefficients array.")}var result=coefficients[n-1];for(var j=n-2;j>=0;j--){result=argument*result+coefficients[j]}return result};return PolynomialFunction}();ApacheCommonsMathInterpolation.PolynomialFunction=PolynomialFunction;var MathArrays=function(){function MathArrays(){}MathArrays.checkOrder=function(val){var previous=val[0];var max=val.length;for(var index=1;index<max;index++){if(val[index]<=previous){throw new Error("Non-monotonic sequence exception.")}previous=val[index]}};return MathArrays}();var Arrays=function(){function Arrays(){}Arrays.binarySearch=function(a,key){var low=0;var high=a.length-1;while(low<=high){var mid=low+high>>>1;var midVal=a[mid];if(midVal<key)low=mid+1;else if(midVal>key)high=mid-1;else if(midVal==key)return mid;else{throw new Error("Invalid number encountered in binary search.")}}return-(low+1)};return Arrays}()})(ApacheCommonsMathInterpolation||(ApacheCommonsMathInterpolation={}));
